name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Cancel in-progress runs when a new run is triggered on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    # Set environment variables for all steps in this job
    env:
      MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
      TEST_MIN_INTERVAL_MS: ${{ secrets.TEST_MIN_INTERVAL_MS }}

    steps:
      # Checkout the repository code at the current commit
      - name: Checkout code
        uses: actions/checkout@v4

      # Install pnpm package manager with a specific version
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      # Setup Node.js environment with caching enabled
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Install dependencies using the lockfile
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Run unit tests first
      - name: Run unit tests
        run: pnpm run test:unit

      # Build the Next.js application
      - name: Build Next.js app
        run: pnpm run build

      # Start the server in the background for integration tests
      - name: Start server
        run: |
          pnpm run start &
          echo $! > server.pid

      # Wait for the server to be fully ready before running tests
      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to start..."
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
          echo "Server is ready!"

      # Run integration tests
      - name: Run integration tests
        run: pnpm run test:integration

      # stop the server
      - name: Stop server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
            rm server.pid
          fi
          
  # JOB 2: DEPLOY PREVIEW     
  deploy-preview:
      if: github.event_name == 'pull_request'
      needs: test
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Deploy to Vercel Preview
          uses: amondnet/vercel-action@v25
          id: vercel-deploy
          with:
            vercel-token: ${{ secrets.VERCEL_TOKEN }}
            vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
            vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
            scope: ${{ secrets.VERCEL_ORG_ID }}

        - name: Comment Preview URL on PR
          uses: actions/github-script@v7
          with:
            script: |
              const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
              const comment = `## ðŸš€ Preview Deployment Ready!
              
              **Preview URL:** ${previewUrl}
              
              âœ… All tests passed
              ðŸ“¦ Built with commit: ${context.sha.substring(0, 7)}`;

              const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
              });

              const botComment = comments.find(comment => 
                comment.user.type === 'Bot' && 
                comment.body.includes('Preview Deployment Ready')
              );

              if (botComment) {
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: botComment.id,
                  body: comment
                });
              } else {
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  body: comment
                });
              }

deploy-production:
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  needs: test
  runs-on: ubuntu-latest
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Vercel Production
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        scope: ${{ secrets.VERCEL_ORG_ID }}
